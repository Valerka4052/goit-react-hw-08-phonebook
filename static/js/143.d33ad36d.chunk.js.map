{"version":3,"file":"static/js/143.d33ad36d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/Contacts/api';\nimport Notiflix from 'notiflix';\nimport Button from '@mui/material/Button';\nimport { TextField } from 'formik-mui';\nimport { Form, Formik, Field } from 'formik';\nimport { Box } from '@mui/material';\n\nexport function ContactForm() {\n    const { data: contacts } = useGetContactsQuery();\n    const [addContact, { isLoading }] = useAddContactMutation();\n\n    const getValues = (inputValues) => {\n        if (inputValues.name === '' || inputValues.number === '') {\n            return;\n        } else if (contacts.find((contact) => {\n            return contact.name === inputValues.name;\n        })) {\n            return Notiflix.Report.info(`${inputValues.name} is already in contacts`);\n        } else {\n            const contact = {\n                name: inputValues.name,\n                number: inputValues.number,\n            };\n            addContact(contact);\n            inputValues.name = '';\n            inputValues.number = '';\n        };\n    };\n\n    const values = {\n        name: '',\n        number: '',\n    };\n        \n        const phoneSchema = Yup.number()\n            .typeError(\"That doesn't look like a phone number\")\n            .positive(\"A phone number can't start with a minus\")\n            .integer(\"A phone number can't include a decimal point\")\n            .min(5)\n            .required('A phone number is required');\n        \n    const validationSchema = Yup.object({\n        name: Yup.string().required(),\n        number: phoneSchema,\n    });\n\n    return (\n        <Formik initialValues={values} onSubmit={(getValues)} validationSchema={validationSchema}>\n            <Form>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'flex-end',\n                        width: '100%',\n                        ml: 'auto',\n                        mr: 'auto',\n                        p: '30px',\n                    }}>\n                    <Field component={TextField} name=\"name\" label=\"name\" id=\"standard-basic\" variant=\"standard\" disabled={false} margin=\"normal\" />\n                    <Field component={TextField} name=\"number\" label=\"number\" id=\"standard-basic\" variant=\"standard\" disabled={false} margin=\"normal\" />\n                    <Box sx={{\n                        ml: 'auto',\n                    }}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isLoading}>{isLoading ? 'please wait...' : 'add contact'}</Button>\n                    </Box>\n                </Box>\n            </Form>\n        </Formik>\n    );\n};\n","import * as Yup from 'yup';\nimport { Form, Formik, Field } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDeleteContactMutation, useEditContactMutation } from 'redux/Contacts/api';\nimport Notiflix from 'notiflix';\nimport { TextField } from 'formik-mui';\nimport { Box, Button, ListItem, Typography } from '@mui/material';\n\nexport function ContactListItem({ name, number, id, array, index }) {\n    const [removeContact, { isLoading }] = useDeleteContactMutation();\n    const [editContact, { isLoading: load }] = useEditContactMutation();\n    console.log(useEditContactMutation())\n    const [showForm, setShowForm] = useState(false);\n    const values = { name, number, };\n        \n        const phoneSchema = Yup.number()\n            .typeError(\"That doesn't look like a phone number\")\n            .positive(\"A phone number can't start with a minus\")\n            .integer(\"A phone number can't include a decimal point\")\n            .min(5)\n            .required('A phone number is required');\n        \n        const validationSchema = Yup.object({\n            name: Yup.string().max(20).required(),\n            number: phoneSchema,\n        });\n    \n    function changeContact(inputValues){\n       \n            const contact = {\n                name: inputValues.name,\n                number: inputValues.number,\n        };\n      \n        if (array.find(({name}, pos) => name === contact.name && pos !== index)) {\n           Notiflix.Report.info('a contact with that name already exists');\n            return\n        }\n        if (array.find(({ name, number }) => name === contact.name && number === contact.number)) {\n            Notiflix.Report.info('cotact data has not changed');\n            return\n        }\n        editContact({ id, contact });\n        setShowForm(false)\n    };\n  \n    return (\n        <ListItem sx={{ display: 'flex', justifyContent: 'space-between', borderBottom:'1px solid black' }}>\n            {!showForm ?\n                (load || isLoading ? <Typography><b>please wait............</b></Typography> :\n                    < >\n                        <Box>\n                            <Typography ><b>{name} : </b> {number}</Typography>\n                        </Box>\n                        <Box sx={{ ml: 'auto' }}>\n                            <Button variant=\"contained\" onClick={() => { setShowForm(true) }} type='button' sx={{ mr: '10px' }}>Edit</Button>\n                            <Button variant=\"contained\" onClick={() => { removeContact(id) }} type='button'>Delete</Button>\n                        </Box>\n                    </>) : (\n                    <Formik initialValues={values} onSubmit={changeContact} validationSchema={validationSchema} >\n                        <Form style={{ width: '100%' }}>\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', }}>\n                                <Box>\n                                    <Field component={TextField} name=\"name\" variant=\"standard\" disabled={false} />\n                                    <Field component={TextField} name=\"number\" variant=\"standard\" disabled={false} />\n                                </Box>\n                                <Box>\n                                    <Button variant=\"contained\" color='secondary' type=\"submit\" sx={{ mr: '10px' }}>Confirm</Button>\n                                    <Button variant=\"contained\" color='secondary' type=\"button\" onClick={() => { setShowForm(false) }} >Cancel</Button>\n                                </Box> </Box>\n                        </Form>\n                    </Formik>\n                )}\n        </ListItem>\n    );\n};\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    array: PropTypes.array.isRequired,\n    index:PropTypes.number.isRequired,\n};\n\n","import { Box, List, Typography } from '@mui/material';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/Contacts/api';\n\n\nexport function ContactList () {\n    const { data } = useGetContactsQuery();\n   \n    const filter = useSelector(state => state.filter);\n     if(!data)return\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = data.filter(({ name }) => {\n        return name.toLowerCase().includes(normalizedFilter);\n    });\n\n    return (\n        data.length > 0 ?\n        <Box sx={{ width: '50%' }}>\n            <Typography variant=\"h3\">Contacts [{data.length}]</Typography>\n            <List>\n                {filteredContacts.map(({ name, number, id }, index) => {\n                    return <ContactListItem\n                        index={index}\n                        array={filteredContacts}\n                        key={id}\n                        name={name}\n                        number={number}\n                        id={id}\n                    />\n                }\n                )}\n            </List>\n            </Box> :\n          <Typography variant=\"h3\">There is no contacts yet</Typography>  \n    );\n};\n","import { useDispatch } from 'react-redux';\nimport { getFlter } from 'redux/Filter/slice';\nimport { Box, TextField } from '@mui/material';\n\n\nexport function Filter() {\n    const dispatch = useDispatch()\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'flex-end',\n                width: '100%',\n                ml: 'auto',\n                mr: 'auto',\n                p: '30px',\n            }}>\n            <TextField\n                name=\"filter\"\n                type=\"text\"\n                label=\"Find contacts by name\"\n                id=\"standard-basic\"\n                variant=\"standard\"\n                disabled={false}\n                onChange={(e) => dispatch(getFlter(e.target.value))}\n            />\n        </Box>\n    );\n};\n","import { Container } from '@mui/material';\nimport { CirclesWithBar } from 'react-loader-spinner';\n\nexport function Loader() {\n    return (\n        <Container sx={{p:'40px',opacity:'.6'}}\n        ><CirclesWithBar\n                height=\"50%\"\n                width=\"50%\"\n                color=\"#11790f\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                barColor=\"\"\n                ariaLabel='circles-with-bar-loading'\n            />\n        </Container>\n    );\n};","import { Box, Typography } from \"@mui/material\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport { useGetContactsQuery } from \"redux/Contacts/api\";\n\nfunction ContactsPage() {\n  const { error, isLoading, refetch } = useGetContactsQuery();\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    isLoading ? <Loader /> :\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', p: '40px', }}>\n        {error ? <h1>{error.message}</h1> :\n          <Box sx={{ width: '40%' }}>\n            <Typography variant=\"h2\">Phonebook</Typography>\n            <ContactForm />\n            <Filter />\n          </Box>}\n        <ContactList />\n      </Box>\n  );\n};\n\nexport default ContactsPage;"],"names":["ContactForm","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isLoading","phoneSchema","Yup","typeError","positive","integer","min","required","validationSchema","name","number","initialValues","onSubmit","inputValues","find","contact","Notiflix","Box","sx","display","flexDirection","justifyContent","width","ml","mr","p","component","TextField","label","id","variant","disabled","margin","Button","color","type","ContactListItem","array","index","useDeleteContactMutation","removeContact","useEditContactMutation","editContact","load","console","log","useState","showForm","setShowForm","values","max","ListItem","borderBottom","pos","style","onClick","Typography","ContactList","filter","useSelector","state","normalizedFilter","toLowerCase","filteredContacts","includes","length","List","map","Filter","dispatch","useDispatch","onChange","e","getFlter","target","value","Loader","Container","opacity","height","wrapperStyle","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","error","refetch","useEffect","alignItems","message"],"sourceRoot":""}
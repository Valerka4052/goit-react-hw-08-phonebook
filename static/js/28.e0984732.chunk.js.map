{"version":3,"file":"static/js/28.e0984732.chunk.js","mappings":"wOAMO,SAASA,IACb,IAAMC,GAAWC,EAAAA,EAAAA,MAmBdC,EAAmBC,EAAAA,GAAW,CAChCC,KAAMD,EAAAA,KAAaE,WACnBC,MAAOH,EAAAA,KAAaG,QAAQD,WAC5BE,SAASJ,EAAAA,KAAaE,aAGZG,EAAa,SAACC,IAxBI,SAACC,GAErB,IAAMC,EAAa,CACfP,KAAMM,EAAYN,KAClBE,MAAOI,EAAYJ,MACnBC,SAAUG,EAAYH,UAI9BP,GAASY,EAAAA,EAAAA,IAAOD,GACnB,CAeME,CAAoBJ,EACtB,EAGD,OACI,SAAC,KAAD,CACIK,cAnBO,CACXV,KAAM,GACNE,MAAO,GACPC,SAAU,IAiBNQ,SAAU,SAACN,EAAD,GAA4B,IAAjBO,EAAgB,EAAhBA,UAAkBR,EAAWC,GAASO,GAAY,EACvEd,iBAAkBA,EAHtB,UAKI,UAAC,KAAD,YACI,qCAAW,SAAC,KAAD,CAAOE,KAAK,UAAS,SAAC,KAAD,CAAcA,KAAK,OAAOa,UAAU,WACpE,sCAAY,SAAC,KAAD,CAAOb,KAAK,QAAQc,KAAK,WAAS,SAAC,KAAD,CAAcd,KAAK,QAAQe,GAAC,EAACF,UAAU,WACrF,yCAAe,SAAC,KAAD,CAAOb,KAAK,WAAWc,KAAK,cAAY,SAAC,KAAD,CAAcd,KAAK,WAAYa,UAAU,WAChG,mBAAQC,KAAK,SAAb,yBAIf,CC3CL,MANA,WACI,OACI,SAACnB,EAAD,GAEP,C","sources":["components/SignInForm/SignInForm.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { Form, Formik, Field, ErrorMessage} from 'formik';\nimport { signUp } from 'redux/Sign/operations';\nimport { useDispatch } from 'react-redux';\n\n\nexport function SignInForm() {\n   const dispatch = useDispatch()\n    const getSbmitInformation = (inputValues) => {\n     \n            const signUpUser = {\n                name: inputValues.name,\n                email: inputValues.email,\n                password: inputValues.password\n            };\n\n        // console.log(signUpUser)\n        dispatch(signUp(signUpUser))\n    };\n\n        const values = {\n            name: '',\n            email: '',\n            password: '',\n        };\n        \nconst validationSchema = Yup.object({\n    name: Yup.string().required(),\n    email: Yup.string().email().required(),\n    password:Yup.string().required(),\n        });\n\n        const submitForm = (values) => {\n           getSbmitInformation(values);\n        };\n        \n    \n        return (\n            <Formik\n                initialValues={values}\n                onSubmit={(values, { resetForm }) => { submitForm(values); resetForm()}}\n                validationSchema={validationSchema}\n            >\n                <Form>\n                    <label>Name<Field name=\"name\" /><ErrorMessage name=\"name\" component=\"h3\" /></label>\n                    <label>Email<Field name=\"email\" type=\"email\"/><ErrorMessage name=\"email\" t component=\"h3\" /></label>\n                    <label>Password<Field name=\"password\" type=\"password\"/><ErrorMessage name=\"password\"  component=\"h3\" /></label>\n                    <button type=\"submit\">Sign up</button>\n                </Form>\n            </Formik>\n        );\n    };\n","import { SignInForm } from \"components/SignInForm/SignInForm\";\n\nfunction SignUpPage() {\n    return (\n        <SignInForm />\n    );\n};\n\nexport default SignUpPage;"],"names":["SignInForm","dispatch","useDispatch","validationSchema","Yup","name","required","email","password","submitForm","values","inputValues","signUpUser","signUp","getSbmitInformation","initialValues","onSubmit","resetForm","component","type","t"],"sourceRoot":""}